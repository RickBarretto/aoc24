;; module: "AOC24 - Day 05"
;; author: "RickBarretto" 
;; license: {
;;		This Source Code Form is subject to the terms of the Mozilla Public
;;  	License, v. 2.0. If a copy of the MPL was not distributed with this
;; 		file, You can obtain one at https://mozilla.org/MPL/2.0/.
;; }


adjacents: $[collection :block][
	;; Returns a list of all adjacent pairs in a collection
	;; Example: [1 2 3 4] => [[1 2] [2 3] [3 4]]

	max: sub (size collection) 2
	pair: $[collection :block index :integer]
		-> @[get collection index, get collection inc index]

	(one? collection)? 
		-> collection
		-> map (0..max) => [pair collection &]
]

safeDirections?: $[reports :block][
	;; Returns true if all pairs are in increasing or decreasing order
	ensure -> every? reports => integer?

	pairs: adjacents reports

	increasing: pairs
		| map 'pair -> less? pair\0 pair\1
		| all?

	decreasing: pairs
		| map 'pair -> greater? pair\0 pair\1
		| all?

	or? increasing decreasing
]

safeDistances?: $[report][
	;; Returns true if all pairs have a difference between 1 and 3
	ensure -> every? report => integer?
	
	safe?: $[pair :block][
		ensure -> 2 = size pair
		ensure -> every? pair => integer?

		abs (pair\0 - pair\1) | between? 1 3
	]

	report
		| adjacents
		| map => safe?
		| all?
] 

resultFrom: $[file :string][
	
	lines: read.lines file
	reports: to [:block[:integer]] lines
	
	safeDirections: reports 
		| map => safeDirections?

	safeDistances: reports
		| map => safeDistances?

	couple safeDirections safeDistances
		| enumerate => all?
]

if standalone? [
	ensure -> 2 = print <= resultFrom ./"../data/sample.txt"
	ensure -> 224 = print <= resultFrom ./"../data/rick.txt"
]
